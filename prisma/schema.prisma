// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}


model ReviewedAlbum {
    id                     Int             @id @default(autoincrement())
    createdAt              DateTime        @default(now())                      // Date of creation
    artist                 Artist          @relation(fields: [artist_db_id], references: [id])  // Artist of album
    artist_db_id           Int                                                  // Artist ID
    name                   String                                               // Album name
    spotify_id             String          @unique                              // Spotify ID
    release_date           String                                               // Release date of album
    release_year           Int                                                  // Year of release
    image_urls             String          @db.Text                             //JSON object of array of urls
    scored_tracks          String          @db.Text                             //JSON object of array of tracks
    best_song              String                                               // Best song on album
    worst_song             String                                               // Worst song on album
    runtime                String?                                              // Album runtime
    review_content         String?         @db.Text                             // Review content
    review_score           Float                                                // Score of review
    review_date            String?                                              // Date of review

    @@index([artist_db_id])

}

model Artist{
    id                     Int             @id @default(autoincrement())
    name                   String                                               // Artist name
    spotify_id             String          @unique                              // Spotify ID
    image_urls             String          @db.Text                             // JSON object of array of urls
    albums                 ReviewedAlbum[]                                      // Array of ReviewedAlbums
    average_score          Float                                                // Average of all album scores
    leaderboard_position   Int?                                                 // Position in leaderboard                              
    concerts               Concert[]       @relation("ConcertsByArtist")        // Array of Concerts
    bonus_points           Float           @default(0)                          // Bonus points for various reasons (e.g., good album, good concert etc)
    bonus_reason           String?         @db.Text                             // JSON object of array of reasons for bonus points
    total_score            Float           @default(0)                          // Total score of artist (average_score + bonus_points)
    createdAt              DateTime        @default(now())                      // Date of creation
    image_updated_at       DateTime        @default(now())                      // Date of last image update

}

model BookmarkedAlbum {
    id                     Int             @id @default(autoincrement())
    name                   String                                               // Album name
    spotify_id             String          @unique                              // Spotify ID
    image_url              String          @db.Text                             //JSON object of array of urls
    artist_name            String                                               // Artist name
    artist_spotify_id      String                                               // Artist Spotify ID
    release_year           Int                                                  // Year of release
    release_date           String                                               // Release date of album
}

model Concert{
    id                     Int             @id @default(autoincrement())
    artist                 Artist          @relation("ConcertsByArtist", fields: [artist_db_id], references: [id])
    artist_db_id           Int
    show_name              String
    date                   DateTime
    venue                  String
    city                   String
    image_url              String
    // setlist                String          @db.Text //JSON object of array of songs
    setlist_link           String
    support_artists        String          @db.Text //JSON object of array of artists

    @@index([artist_db_id])
}
